name: CI/CD - Test and Deploy to EC2

on:
  push:
    branches:
      - sample

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 2.2.8

      - name: Run Tests
        env:
          INFISICAL_ENV: dev
          INFISICAL_PROJECT_ID: ${{ secrets.INFISICAL_PROJECT_ID }}
          INFISICAL_CLIENT_SECRET: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          INFISICAL_CLIENT_ID: ${{ secrets.INFISICAL_CLIENT_ID }}
        run: deno task test

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Upload project using rsync
        run: |
          rsync -az --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.env' \
            -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no" \
            ./ ubuntu@${{ secrets.EC2_HOST }}:~/apps/goesg-api/

      - name: Deploy on EC2
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/apps/goesg-api

            docker compose down --remove-orphans
            docker compose up --build -d
          EOF